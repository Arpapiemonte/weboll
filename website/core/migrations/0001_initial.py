# Generated by Django 2.2.19 on 2021-03-27 17:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Aggregazione",
            fields=[
                (
                    "id_aggregazione",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("descrizione", models.CharField(max_length=100)),
                (
                    "tipo_aggregazione",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("data_agg", models.DateTimeField(blank=True, null=True)),
                ("autore_agg", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "aggregazione",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Application",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("version", models.BigIntegerField(blank=True, null=True)),
                ("code", models.CharField(max_length=255, unique=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "userapplicationfqn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "db_table": "application",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Applicationgroup",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("version", models.BigIntegerField(blank=True, null=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "applicationgroup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Applicationrole",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("version", models.BigIntegerField(blank=True, null=True)),
                (
                    "descritpion",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("role", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "applicationrole",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Apuser",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("version", models.BigIntegerField(blank=True, null=True)),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                ("enabled", models.BooleanField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("password", models.CharField(blank=True, max_length=255, null=True)),
                ("surname", models.CharField(blank=True, max_length=255, null=True)),
                ("username", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "apuser",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Classes",
            fields=[
                (
                    "id_classes",
                    models.SmallIntegerField(primary_key=True, serialize=False),
                ),
                ("description", models.CharField(blank=True, max_length=50, null=True)),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
                ("version", models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "classes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ClassesValue",
            fields=[
                (
                    "id_classes_value",
                    models.SmallIntegerField(primary_key=True, serialize=False),
                ),
                ("description", models.CharField(max_length=50)),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "classes_value",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ForecastModels",
            fields=[
                (
                    "fore_name",
                    models.CharField(max_length=9, primary_key=True, serialize=False),
                ),
                ("fore_type", models.CharField(max_length=5)),
                ("fore_desc", models.CharField(blank=True, max_length=60, null=True)),
                ("model_ris", models.CharField(blank=True, max_length=4, null=True)),
                ("data_agg", models.DateTimeField()),
                ("autore_agg", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "forecast_models",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Groupapplicationrole",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("version", models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "groupapplicationrole",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OzonoAggregazione",
            fields=[
                (
                    "id_ozono_aggregazione",
                    models.SmallIntegerField(primary_key=True, serialize=False),
                ),
                ("aggregazione", models.CharField(max_length=20)),
                ("desc_aggregazione_spaziale", models.CharField(max_length=30)),
                ("desc_aggregazione_temporale", models.CharField(max_length=60)),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "ozono_aggregazione",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OzonoLivelli",
            fields=[
                ("id_ozono_livelli", models.SmallIntegerField(unique=True)),
                ("livelli", models.IntegerField(primary_key=True, serialize=False)),
                ("soglia_inferiore_mxd", models.IntegerField()),
                ("soglia_superiore_mxd", models.IntegerField()),
                ("soglia_inferiore_mx8", models.IntegerField()),
                ("soglia_superiore_mx8", models.IntegerField()),
                ("riferimento_legge", models.TextField()),
                ("colore", models.CharField(max_length=20)),
                ("rgb", models.TextField()),
                ("sintesi_raccomandazioni", models.TextField(blank=True, null=True)),
                ("descrizione", models.TextField(blank=True, null=True)),
                ("raccomandazione", models.TextField(blank=True, null=True)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField()),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "ozono_livelli",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OzonoZone",
            fields=[
                ("id_ozono_zone", models.SmallIntegerField(unique=True)),
                (
                    "zone",
                    models.CharField(max_length=1, primary_key=True, serialize=False),
                ),
                ("descrizione", models.CharField(max_length=60)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField()),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "ozono_zone",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Parametro",
            fields=[
                (
                    "id_parametro",
                    models.CharField(max_length=15, primary_key=True, serialize=False),
                ),
                ("denominazione", models.CharField(max_length=200)),
                ("num_decimali", models.IntegerField(blank=True, null=True)),
                ("data_agg", models.DateTimeField()),
                ("autore_agg", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "parametro",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Products",
            fields=[
                (
                    "id_products",
                    models.CharField(max_length=4, primary_key=True, serialize=False),
                ),
                ("description", models.CharField(max_length=50)),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "products",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RelWeatherProdParameter",
            fields=[
                (
                    "id_rel_weather_prod_parameter",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                (
                    "cod_staz_meteo",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("fore_name", models.CharField(blank=True, max_length=9, null=True)),
                ("fore_type", models.CharField(blank=True, max_length=5, null=True)),
                ("priority", models.IntegerField()),
                ("validation_flag", models.BooleanField(blank=True, null=True)),
                ("valid_to", models.DateTimeField()),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "rel_weather_prod_parameter",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RelWeatherProdTimeLayouts",
            fields=[
                (
                    "id_rel_weather_prod_time_layouts",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "rel_weather_prod_time_layouts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SkyCondition",
            fields=[
                (
                    "id_sky_condition",
                    models.SmallIntegerField(primary_key=True, serialize=False),
                ),
                ("sky_condition", models.CharField(max_length=6)),
                ("description", models.CharField(max_length=60)),
                ("description_ita", models.CharField(max_length=60)),
                ("image", models.BinaryField()),
                ("alt_code", models.CharField(max_length=6)),
                ("sort_index", models.SmallIntegerField(blank=True, null=True)),
                ("id_infile", models.IntegerField(blank=True, null=True)),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "sky_condition",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SkyCover",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_sky_cover", models.IntegerField(blank=True, null=True)),
                ("min_value", models.IntegerField(blank=True, null=True)),
                ("max_value", models.IntegerField(blank=True, null=True)),
                ("desc_ita", models.CharField(blank=True, max_length=120, null=True)),
                ("desc_eng", models.CharField(blank=True, max_length=120, null=True)),
                ("last_update", models.DateTimeField(blank=True, null=True)),
                ("username", models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                "db_table": "sky_cover",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StazioneMeteo",
            fields=[
                (
                    "codice_istat_comune",
                    models.CharField(max_length=6, primary_key=True, serialize=False),
                ),
                ("progr_punto_com", models.IntegerField()),
                (
                    "codice_stazione",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                ("nazione", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "indirizzo_localita",
                    models.CharField(blank=True, max_length=80, null=True),
                ),
                ("denominazione", models.CharField(max_length=80, unique=True)),
                (
                    "latitudine_n",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "longitudine_e",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "latitudine_mm",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "longitudine_mm",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("utm_x", models.IntegerField(blank=True, null=True)),
                ("utm_y", models.IntegerField(blank=True, null=True)),
                (
                    "quota_stazione",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "quota_sito",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "cod_staz_meteo",
                    models.CharField(blank=True, max_length=5, null=True, unique=True),
                ),
                (
                    "proprietario",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "idtab_allertamento_2",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                ("data_agg", models.DateTimeField()),
                ("autore_agg", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "stazione_meteo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TimeLayouts",
            fields=[
                (
                    "id_time_layouts",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("start_day_offset", models.SmallIntegerField()),
                ("end_day_offset", models.SmallIntegerField(blank=True, null=True)),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
                ("day_offset", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "time_layouts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Trend",
            fields=[
                (
                    "id_trend",
                    models.SmallIntegerField(primary_key=True, serialize=False),
                ),
                ("id_web", models.SmallIntegerField()),
                ("desc_ita", models.CharField(blank=True, max_length=50, null=True)),
                ("desc_eng", models.CharField(blank=True, max_length=50, null=True)),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "trend",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UnitaMisura",
            fields=[
                (
                    "id_unita_misura",
                    models.CharField(max_length=2, primary_key=True, serialize=False),
                ),
                ("descrizione", models.CharField(blank=True, max_length=60, null=True)),
                ("data_agg", models.DateTimeField()),
                ("autore_agg", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "unita_misura",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Userauth",
            fields=[
                (
                    "name",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("password", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "userauth",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Usergroup",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("version", models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "usergroup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                ("id_venue", models.IntegerField(primary_key=True, serialize=False)),
                ("description", models.CharField(max_length=50)),
                (
                    "altitude",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "venue",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="W05",
            fields=[
                ("id_w05", models.BigAutoField(primary_key=True, serialize=False)),
                ("start_valid_time", models.DateTimeField()),
                ("validity", models.IntegerField()),
                ("next_blt_time", models.DateTimeField()),
                ("situation", models.TextField(blank=True, null=True)),
                ("status", models.CharField(max_length=1)),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
                ("seq_num", models.BigIntegerField(blank=True, null=True)),
                ("version", models.BigIntegerField(blank=True, null=True)),
                ("id_w05_parent", models.IntegerField(blank=True, null=True)),
                ("situation_image", models.BinaryField(blank=True, null=True)),
            ],
            options={
                "db_table": "w05",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="W05Classes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_valid_time", models.DateTimeField()),
                ("end_valid_time", models.DateTimeField()),
            ],
            options={
                "db_table": "w05_classes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="W05Conf",
            fields=[
                (
                    "descr",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "w05_conf",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="W05Data",
            fields=[
                ("id_w05_data", models.AutoField(primary_key=True, serialize=False)),
                (
                    "numeric_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                ("text_value", models.TextField(blank=True, null=True)),
                ("start_valid_time", models.DateTimeField()),
                ("end_valid_time", models.DateTimeField()),
            ],
            options={
                "db_table": "w05_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="W16",
            fields=[
                ("id_w16", models.IntegerField(primary_key=True, serialize=False)),
                ("start_valid_time", models.DateTimeField()),
                ("validity", models.IntegerField()),
                ("next_blt_time", models.DateTimeField()),
                ("made_by", models.CharField(max_length=1)),
                ("note", models.TextField()),
                ("status", models.CharField(max_length=1)),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
                ("seq_num", models.BigIntegerField(blank=True, null=True)),
                ("version", models.BigIntegerField(blank=True, null=True)),
                ("id_w16_parent", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "w16",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="W16Conf",
            fields=[
                ("id_w16_conf", models.IntegerField(primary_key=True, serialize=False)),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "w16_conf",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="W16Data",
            fields=[
                ("id_w16_data", models.IntegerField(primary_key=True, serialize=False)),
                ("data_emissione", models.DateTimeField()),
                ("data_scadenza", models.DateTimeField()),
                ("id_scadenza", models.IntegerField()),
            ],
            options={
                "db_table": "w16_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="W16Data1",
            fields=[
                ("id_qa_parametro", models.CharField(max_length=10)),
                (
                    "valore_num",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                ("valore_classe", models.IntegerField(blank=True, null=True)),
                (
                    "id_w16_data1",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("id_strumentazione", models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "w16_data1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WeatherAttribute",
            fields=[
                (
                    "id_weather_attribute",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("desc_ita", models.CharField(blank=True, max_length=240, null=True)),
                ("desc_eng", models.CharField(blank=True, max_length=240, null=True)),
                ("last_update", models.DateTimeField(blank=True, null=True)),
                ("username", models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                "db_table": "weather_attribute",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WeatherValue",
            fields=[
                (
                    "id_weather_value",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("desc_ita", models.CharField(blank=True, max_length=160, null=True)),
                ("desc_eng", models.CharField(blank=True, max_length=160, null=True)),
                ("last_update", models.DateTimeField(blank=True, null=True)),
                ("username", models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                "db_table": "weather_value",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WeatherValues",
            fields=[
                (
                    "id_weather_values",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("id_venue", models.IntegerField()),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("id_time_layouts", models.IntegerField()),
                ("id_parametro", models.CharField(max_length=10)),
                ("id_aggregazione", models.IntegerField()),
                (
                    "original_numeric_values",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                (
                    "validated_numeric_values",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=7, null=True
                    ),
                ),
                ("original_text_values", models.TextField(blank=True, null=True)),
                ("validated_text_values", models.TextField(blank=True, null=True)),
                ("original_trend", models.IntegerField(blank=True, null=True)),
                ("validated_trend", models.IntegerField(blank=True, null=True)),
                ("id_query_numeric", models.BigIntegerField(blank=True, null=True)),
                ("id_query_text", models.BigIntegerField(blank=True, null=True)),
                (
                    "cod_staz_meteo",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("last_update", models.DateTimeField()),
                ("username", models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                "db_table": "weather_values",
                "managed": False,
            },
        ),
    ]
